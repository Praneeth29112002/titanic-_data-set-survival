import matplotlib.pyplot as plt
import seaborn as sns
import cufflinks as cf
import plotly.express as px
%matplotlib inline

import numpy as np # linear algebra
import pandas as pd

train_data = pd.read_csv("/content/titanic train.csv")

train_data.head()

train_data.isnull().sum()

df_columns = train_data.select_dtypes(exclude=['object']).columns
df = train_data[df_columns]

plt.figure(figsize=(10, 5))
sns.heatmap(df.corr(), annot=True, cmap='Dark2');

correlation = abs(pd.DataFrame(df.corr().Survived))
correlation

train_data['Survived'].value_counts()

train_data['Pclass'].value_counts()

train_data['Embarked'].value_counts()

train_data['Age'].isnull().sum()

plt.figure(figsize=(10, 10))
sns.boxplot(x='Pclass',y='Age',data=train_data)
plt.title('Age over Pclass')

def impute_train_age(cols):
    Age = cols[0]
    Pclass = cols[1]
    
    if pd.isnull(Age):

        if Pclass == 1:
            return 37

        elif Pclass == 2:
            return 29

        else:
            return 24

    else:
        return Age

train_data['Age'] = train_data[['Age','Pclass']].apply(impute_train_age,axis=1)

train_data['Age'].isnull().sum()

train_data['Cabin'].isnull().sum()

train_data.drop('Cabin',axis=1,inplace=True)

train_data.dropna(inplace=True)

train_data.drop(['Name','Ticket'],axis=1,inplace=True)

train_data = pd.get_dummies(train_data, columns = ['Sex','Embarked'], drop_first=True)

train_data.drop('PassengerId',axis=1,inplace=True)

X = train_data.drop(['Survived'],axis = 1)
y = train_data['Survived']

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import RobustScaler

from sklearn.linear_model import LogisticRegression

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25,random_state=42)

cols = X_train.columns

scaler = RobustScaler()

X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

X_train = pd.DataFrame(X_train,columns=cols)
X_test = pd.DataFrame(X_test,columns=cols)

LogisticRegression_model = LogisticRegression(solver='liblinear')
LogisticRegression_model.fit(X_train,y_train)

y_pred = LogisticRegression_model.predict(X_test)
y_pred

from sklearn import metrics
from sklearn.metrics import confusion_matrix

confusion_matrix = confusion_matrix(y_test,y_pred)
confusion_matrix

plt.figure(figsize=(10, 5))
sns.heatmap(confusion_matrix, annot=True, fmt='d', cmap='cool')
plt.show()

test_data = pd.read_csv('/content/Titanic_test.csv')

test_data.isnull().sum()

def impute_test_age(cols):
    Age = cols[0]
    Pclass = cols[1]
    
    if pd.isnull(Age):

        if Pclass == 1:
            return 42

        elif Pclass == 2:
            return 27

        else:
            return 25

    else:
        return Age

test_data['Age'] = test_data[['Age','Pclass']].apply(impute_test_age,axis=1)

test_data.drop('Cabin',axis=1,inplace=True)

null_columns=test_data.columns[test_data.isnull().any()]
row_num = (test_data[test_data["Fare"].isnull()][null_columns])
row_num

Fare_median = test_data["Fare"].median()
Fare_median

test_data = test_data.replace(np.NaN,14.4542)

test_pass = test_data['PassengerId']

test_data.drop(['Name','Ticket','PassengerId'],axis=1,inplace=True)

test_data.isnull().sum()

test_data = pd.get_dummies(test_data, columns = ['Sex', 'Embarked'], drop_first=True)


test_data.head()

X1_Train = train_data.drop(['Survived'],axis = 1)
y1_Train = train_data['Survived']

cols = test_data.columns

scaler = RobustScaler()

X1_Train = scaler.fit_transform(X1_Train)
test_data = scaler.transform(test_data)

X1_Train = pd.DataFrame(X1_Train,columns=cols)
test_data = pd.DataFrame(test_data,columns=cols)

LogisticRegression_model_2 = LogisticRegression(solver='liblinear')
LogisticRegression_model_2.fit(X1_Train,y1_Train)

y_pred_2 = LogisticRegression_model.predict(test_data)

submission = pd.DataFrame({'PassengerId': test_pass, 'Survived': y_pred_2})
submission

submission.to_csv('submission_praneeth.csv', index=False)

